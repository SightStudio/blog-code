/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JCustomer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JCustomerRecord extends UpdatableRecordImpl<JCustomerRecord> implements Record9<Integer, Integer, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sakila.customer.customer_id</code>.
     */
    public JCustomerRecord setCustomerId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sakila.customer.store_id</code>.
     */
    public JCustomerRecord setStoreId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.store_id</code>.
     */
    public Integer getStoreId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sakila.customer.first_name</code>.
     */
    public JCustomerRecord setFirstName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sakila.customer.last_name</code>.
     */
    public JCustomerRecord setLastName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sakila.customer.email</code>.
     */
    public JCustomerRecord setEmail(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sakila.customer.address_id</code>.
     */
    public JCustomerRecord setAddressId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.address_id</code>.
     */
    public Integer getAddressId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>sakila.customer.active</code>.
     */
    public JCustomerRecord setActive(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.active</code>.
     */
    public Byte getActive() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>sakila.customer.create_date</code>.
     */
    public JCustomerRecord setCreateDate(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>sakila.customer.last_update</code>.
     */
    public JCustomerRecord setLastUpdate(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>sakila.customer.last_update</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, String, String, Integer, Byte, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JCustomer.CUSTOMER.CUSTOMER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return JCustomer.CUSTOMER.STORE_ID;
    }

    @Override
    public Field<String> field3() {
        return JCustomer.CUSTOMER.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return JCustomer.CUSTOMER.LAST_NAME;
    }

    @Override
    public Field<String> field5() {
        return JCustomer.CUSTOMER.EMAIL;
    }

    @Override
    public Field<Integer> field6() {
        return JCustomer.CUSTOMER.ADDRESS_ID;
    }

    @Override
    public Field<Byte> field7() {
        return JCustomer.CUSTOMER.ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return JCustomer.CUSTOMER.CREATE_DATE;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return JCustomer.CUSTOMER.LAST_UPDATE;
    }

    @Override
    public Integer component1() {
        return getCustomerId();
    }

    @Override
    public Integer component2() {
        return getStoreId();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public Integer component6() {
        return getAddressId();
    }

    @Override
    public Byte component7() {
        return getActive();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateDate();
    }

    @Override
    public LocalDateTime component9() {
        return getLastUpdate();
    }

    @Override
    public Integer value1() {
        return getCustomerId();
    }

    @Override
    public Integer value2() {
        return getStoreId();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public Integer value6() {
        return getAddressId();
    }

    @Override
    public Byte value7() {
        return getActive();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateDate();
    }

    @Override
    public LocalDateTime value9() {
        return getLastUpdate();
    }

    @Override
    public JCustomerRecord value1(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public JCustomerRecord value2(Integer value) {
        setStoreId(value);
        return this;
    }

    @Override
    public JCustomerRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public JCustomerRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public JCustomerRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public JCustomerRecord value6(Integer value) {
        setAddressId(value);
        return this;
    }

    @Override
    public JCustomerRecord value7(Byte value) {
        setActive(value);
        return this;
    }

    @Override
    public JCustomerRecord value8(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public JCustomerRecord value9(LocalDateTime value) {
        setLastUpdate(value);
        return this;
    }

    @Override
    public JCustomerRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Integer value6, Byte value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JCustomerRecord
     */
    public JCustomerRecord() {
        super(JCustomer.CUSTOMER);
    }

    /**
     * Create a detached, initialised JCustomerRecord
     */
    public JCustomerRecord(Integer customerId, Integer storeId, String firstName, String lastName, String email, Integer addressId, Byte active, LocalDateTime createDate, LocalDateTime lastUpdate) {
        super(JCustomer.CUSTOMER);

        setCustomerId(customerId);
        setStoreId(storeId);
        setFirstName(firstName);
        setLastName(lastName);
        setEmail(email);
        setAddressId(addressId);
        setActive(active);
        setCreateDate(createDate);
        setLastUpdate(lastUpdate);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JCustomerRecord
     */
    public JCustomerRecord(jooq.jooq_dsl.tables.pojos.JCustomer value) {
        super(JCustomer.CUSTOMER);

        if (value != null) {
            setCustomerId(value.getCustomerId());
            setStoreId(value.getStoreId());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setEmail(value.getEmail());
            setAddressId(value.getAddressId());
            setActive(value.getActive());
            setCreateDate(value.getCreateDate());
            setLastUpdate(value.getLastUpdate());
            resetChangedOnNotNull();
        }
    }
}
