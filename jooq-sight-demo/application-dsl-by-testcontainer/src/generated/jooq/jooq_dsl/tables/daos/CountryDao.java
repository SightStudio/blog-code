/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JCountry;
import jooq.jooq_dsl.tables.records.JCountryRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CountryDao extends AbstractSpringDAOImpl<JCountryRecord, jooq.jooq_dsl.tables.pojos.JCountry, Integer> {

    /**
     * Create a new CountryDao without any configuration
     */
    public CountryDao() {
        super(JCountry.COUNTRY, jooq.jooq_dsl.tables.pojos.JCountry.class);
    }

    /**
     * Create a new CountryDao with an attached configuration
     */
    @Autowired
    public CountryDao(Configuration configuration) {
        super(JCountry.COUNTRY, jooq.jooq_dsl.tables.pojos.JCountry.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JCountry object) {
        return object.getCountryId();
    }

    /**
     * Fetch records that have <code>country_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCountry> fetchRangeOfJCountryId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCountry.COUNTRY.COUNTRY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCountry> fetchByJCountryId(Integer... values) {
        return fetch(JCountry.COUNTRY.COUNTRY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>country_id = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JCountry fetchOneByJCountryId(Integer value) {
        return fetchOne(JCountry.COUNTRY.COUNTRY_ID, value);
    }

    /**
     * Fetch a unique record that has <code>country_id = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JCountry> fetchOptionalByJCountryId(Integer value) {
        return fetchOptional(JCountry.COUNTRY.COUNTRY_ID, value);
    }

    /**
     * Fetch records that have <code>country BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCountry> fetchRangeOfJCountry(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCountry.COUNTRY.COUNTRY_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCountry> fetchByJCountry(String... values) {
        return fetch(JCountry.COUNTRY.COUNTRY_, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCountry> fetchRangeOfJLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JCountry.COUNTRY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCountry> fetchByJLastUpdate(LocalDateTime... values) {
        return fetch(JCountry.COUNTRY.LAST_UPDATE, values);
    }
}
