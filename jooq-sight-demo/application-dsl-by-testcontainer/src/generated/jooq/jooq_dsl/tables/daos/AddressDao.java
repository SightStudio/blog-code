/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JAddress;
import jooq.jooq_dsl.tables.records.JAddressRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class AddressDao extends AbstractSpringDAOImpl<JAddressRecord, jooq.jooq_dsl.tables.pojos.JAddress, Integer> {

    /**
     * Create a new AddressDao without any configuration
     */
    public AddressDao() {
        super(JAddress.ADDRESS, jooq.jooq_dsl.tables.pojos.JAddress.class);
    }

    /**
     * Create a new AddressDao with an attached configuration
     */
    @Autowired
    public AddressDao(Configuration configuration) {
        super(JAddress.ADDRESS, jooq.jooq_dsl.tables.pojos.JAddress.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JAddress object) {
        return object.getAddressId();
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJAddressId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JAddress.ADDRESS.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJAddressId(Integer... values) {
        return fetch(JAddress.ADDRESS.ADDRESS_ID, values);
    }

    /**
     * Fetch a unique record that has <code>address_id = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JAddress fetchOneByJAddressId(Integer value) {
        return fetchOne(JAddress.ADDRESS.ADDRESS_ID, value);
    }

    /**
     * Fetch a unique record that has <code>address_id = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JAddress> fetchOptionalByJAddressId(Integer value) {
        return fetchOptional(JAddress.ADDRESS.ADDRESS_ID, value);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(JAddress.ADDRESS.ADDRESS_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJAddress(String... values) {
        return fetch(JAddress.ADDRESS.ADDRESS_, values);
    }

    /**
     * Fetch records that have <code>address2 BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJAddress2(String lowerInclusive, String upperInclusive) {
        return fetchRange(JAddress.ADDRESS.ADDRESS2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address2 IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJAddress2(String... values) {
        return fetch(JAddress.ADDRESS.ADDRESS2, values);
    }

    /**
     * Fetch records that have <code>district BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJDistrict(String lowerInclusive, String upperInclusive) {
        return fetchRange(JAddress.ADDRESS.DISTRICT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>district IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJDistrict(String... values) {
        return fetch(JAddress.ADDRESS.DISTRICT, values);
    }

    /**
     * Fetch records that have <code>city_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJCityId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JAddress.ADDRESS.CITY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJCityId(Integer... values) {
        return fetch(JAddress.ADDRESS.CITY_ID, values);
    }

    /**
     * Fetch records that have <code>postal_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJPostalCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(JAddress.ADDRESS.POSTAL_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>postal_code IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJPostalCode(String... values) {
        return fetch(JAddress.ADDRESS.POSTAL_CODE, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(JAddress.ADDRESS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJPhone(String... values) {
        return fetch(JAddress.ADDRESS.PHONE, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchRangeOfJLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JAddress.ADDRESS.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JAddress> fetchByJLastUpdate(LocalDateTime... values) {
        return fetch(JAddress.ADDRESS.LAST_UPDATE, values);
    }
}
