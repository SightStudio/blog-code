/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JFilmCategory;
import jooq.jooq_dsl.tables.records.JFilmCategoryRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FilmCategoryDao extends AbstractSpringDAOImpl<JFilmCategoryRecord, jooq.jooq_dsl.tables.pojos.JFilmCategory, Record2<Integer, Integer>> {

    /**
     * Create a new FilmCategoryDao without any configuration
     */
    public FilmCategoryDao() {
        super(JFilmCategory.FILM_CATEGORY, jooq.jooq_dsl.tables.pojos.JFilmCategory.class);
    }

    /**
     * Create a new FilmCategoryDao with an attached configuration
     */
    @Autowired
    public FilmCategoryDao(Configuration configuration) {
        super(JFilmCategory.FILM_CATEGORY, jooq.jooq_dsl.tables.pojos.JFilmCategory.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(jooq.jooq_dsl.tables.pojos.JFilmCategory object) {
        return compositeKeyRecord(object.getFilmId(), object.getCategoryId());
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmCategory> fetchRangeOfJFilmId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmCategory> fetchByJFilmId(Integer... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.FILM_ID, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmCategory> fetchRangeOfJCategoryId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmCategory> fetchByJCategoryId(Integer... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>last_update BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmCategory> fetchRangeOfJLastUpdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JFilmCategory.FILM_CATEGORY.LAST_UPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmCategory> fetchByJLastUpdate(LocalDateTime... values) {
        return fetch(JFilmCategory.FILM_CATEGORY.LAST_UPDATE, values);
    }
}
