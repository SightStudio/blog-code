/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JFilmText;
import jooq.jooq_dsl.tables.records.JFilmTextRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FilmTextDao extends AbstractSpringDAOImpl<JFilmTextRecord, jooq.jooq_dsl.tables.pojos.JFilmText, Integer> {

    /**
     * Create a new FilmTextDao without any configuration
     */
    public FilmTextDao() {
        super(JFilmText.FILM_TEXT, jooq.jooq_dsl.tables.pojos.JFilmText.class);
    }

    /**
     * Create a new FilmTextDao with an attached configuration
     */
    @Autowired
    public FilmTextDao(Configuration configuration) {
        super(JFilmText.FILM_TEXT, jooq.jooq_dsl.tables.pojos.JFilmText.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JFilmText object) {
        return object.getFilmId();
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmText> fetchRangeOfJFilmId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JFilmText.FILM_TEXT.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmText> fetchByJFilmId(Integer... values) {
        return fetch(JFilmText.FILM_TEXT.FILM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JFilmText fetchOneByJFilmId(Integer value) {
        return fetchOne(JFilmText.FILM_TEXT.FILM_ID, value);
    }

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JFilmText> fetchOptionalByJFilmId(Integer value) {
        return fetchOptional(JFilmText.FILM_TEXT.FILM_ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmText> fetchRangeOfJTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilmText.FILM_TEXT.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmText> fetchByJTitle(String... values) {
        return fetch(JFilmText.FILM_TEXT.TITLE, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmText> fetchRangeOfJDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilmText.FILM_TEXT.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmText> fetchByJDescription(String... values) {
        return fetch(JFilmText.FILM_TEXT.DESCRIPTION, values);
    }
}
