/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JCustomer implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer customerid;
    private final Boolean active;
    private final LocalDateTime createdate;
    private final String email;
    private final String firstname;
    private final String lastname;
    private final LocalDateTime lastupdate;
    private final Integer addressId;
    private final Integer storeId;

    public JCustomer(JCustomer value) {
        this.customerid = value.customerid;
        this.active = value.active;
        this.createdate = value.createdate;
        this.email = value.email;
        this.firstname = value.firstname;
        this.lastname = value.lastname;
        this.lastupdate = value.lastupdate;
        this.addressId = value.addressId;
        this.storeId = value.storeId;
    }

    public JCustomer(
        Integer customerid,
        Boolean active,
        LocalDateTime createdate,
        String email,
        String firstname,
        String lastname,
        LocalDateTime lastupdate,
        Integer addressId,
        Integer storeId
    ) {
        this.customerid = customerid;
        this.active = active;
        this.createdate = createdate;
        this.email = email;
        this.firstname = firstname;
        this.lastname = lastname;
        this.lastupdate = lastupdate;
        this.addressId = addressId;
        this.storeId = storeId;
    }

    /**
     * Getter for <code>Customer.customerId</code>.
     */
    public Integer getCustomerid() {
        return this.customerid;
    }

    /**
     * Getter for <code>Customer.active</code>.
     */
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Getter for <code>Customer.createDate</code>.
     */
    public LocalDateTime getCreatedate() {
        return this.createdate;
    }

    /**
     * Getter for <code>Customer.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>Customer.firstName</code>.
     */
    public String getFirstname() {
        return this.firstname;
    }

    /**
     * Getter for <code>Customer.lastName</code>.
     */
    public String getLastname() {
        return this.lastname;
    }

    /**
     * Getter for <code>Customer.lastUpdate</code>.
     */
    public LocalDateTime getLastupdate() {
        return this.lastupdate;
    }

    /**
     * Getter for <code>Customer.address_id</code>.
     */
    public Integer getAddressId() {
        return this.addressId;
    }

    /**
     * Getter for <code>Customer.store_id</code>.
     */
    public Integer getStoreId() {
        return this.storeId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JCustomer other = (JCustomer) obj;
        if (this.customerid == null) {
            if (other.customerid != null)
                return false;
        }
        else if (!this.customerid.equals(other.customerid))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.createdate == null) {
            if (other.createdate != null)
                return false;
        }
        else if (!this.createdate.equals(other.createdate))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.firstname == null) {
            if (other.firstname != null)
                return false;
        }
        else if (!this.firstname.equals(other.firstname))
            return false;
        if (this.lastname == null) {
            if (other.lastname != null)
                return false;
        }
        else if (!this.lastname.equals(other.lastname))
            return false;
        if (this.lastupdate == null) {
            if (other.lastupdate != null)
                return false;
        }
        else if (!this.lastupdate.equals(other.lastupdate))
            return false;
        if (this.addressId == null) {
            if (other.addressId != null)
                return false;
        }
        else if (!this.addressId.equals(other.addressId))
            return false;
        if (this.storeId == null) {
            if (other.storeId != null)
                return false;
        }
        else if (!this.storeId.equals(other.storeId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.customerid == null) ? 0 : this.customerid.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.createdate == null) ? 0 : this.createdate.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.firstname == null) ? 0 : this.firstname.hashCode());
        result = prime * result + ((this.lastname == null) ? 0 : this.lastname.hashCode());
        result = prime * result + ((this.lastupdate == null) ? 0 : this.lastupdate.hashCode());
        result = prime * result + ((this.addressId == null) ? 0 : this.addressId.hashCode());
        result = prime * result + ((this.storeId == null) ? 0 : this.storeId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JCustomer (");

        sb.append(customerid);
        sb.append(", ").append(active);
        sb.append(", ").append(createdate);
        sb.append(", ").append(email);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);
        sb.append(", ").append(lastupdate);
        sb.append(", ").append(addressId);
        sb.append(", ").append(storeId);

        sb.append(")");
        return sb.toString();
    }
}
