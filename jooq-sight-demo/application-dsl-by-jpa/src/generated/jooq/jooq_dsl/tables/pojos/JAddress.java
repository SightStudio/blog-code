/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAddress implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer addressid;
    private final String address;
    private final String address2;
    private final String district;
    private final LocalDateTime lastupdate;
    private final String phone;
    private final String postalcode;
    private final Integer cityId;

    public JAddress(JAddress value) {
        this.addressid = value.addressid;
        this.address = value.address;
        this.address2 = value.address2;
        this.district = value.district;
        this.lastupdate = value.lastupdate;
        this.phone = value.phone;
        this.postalcode = value.postalcode;
        this.cityId = value.cityId;
    }

    public JAddress(
        Integer addressid,
        String address,
        String address2,
        String district,
        LocalDateTime lastupdate,
        String phone,
        String postalcode,
        Integer cityId
    ) {
        this.addressid = addressid;
        this.address = address;
        this.address2 = address2;
        this.district = district;
        this.lastupdate = lastupdate;
        this.phone = phone;
        this.postalcode = postalcode;
        this.cityId = cityId;
    }

    /**
     * Getter for <code>Address.addressId</code>.
     */
    public Integer getAddressid() {
        return this.addressid;
    }

    /**
     * Getter for <code>Address.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Getter for <code>Address.address2</code>.
     */
    public String getAddress2() {
        return this.address2;
    }

    /**
     * Getter for <code>Address.district</code>.
     */
    public String getDistrict() {
        return this.district;
    }

    /**
     * Getter for <code>Address.lastUpdate</code>.
     */
    public LocalDateTime getLastupdate() {
        return this.lastupdate;
    }

    /**
     * Getter for <code>Address.phone</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Getter for <code>Address.postalCode</code>.
     */
    public String getPostalcode() {
        return this.postalcode;
    }

    /**
     * Getter for <code>Address.city_id</code>.
     */
    public Integer getCityId() {
        return this.cityId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JAddress other = (JAddress) obj;
        if (this.addressid == null) {
            if (other.addressid != null)
                return false;
        }
        else if (!this.addressid.equals(other.addressid))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.address2 == null) {
            if (other.address2 != null)
                return false;
        }
        else if (!this.address2.equals(other.address2))
            return false;
        if (this.district == null) {
            if (other.district != null)
                return false;
        }
        else if (!this.district.equals(other.district))
            return false;
        if (this.lastupdate == null) {
            if (other.lastupdate != null)
                return false;
        }
        else if (!this.lastupdate.equals(other.lastupdate))
            return false;
        if (this.phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!this.phone.equals(other.phone))
            return false;
        if (this.postalcode == null) {
            if (other.postalcode != null)
                return false;
        }
        else if (!this.postalcode.equals(other.postalcode))
            return false;
        if (this.cityId == null) {
            if (other.cityId != null)
                return false;
        }
        else if (!this.cityId.equals(other.cityId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.addressid == null) ? 0 : this.addressid.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.address2 == null) ? 0 : this.address2.hashCode());
        result = prime * result + ((this.district == null) ? 0 : this.district.hashCode());
        result = prime * result + ((this.lastupdate == null) ? 0 : this.lastupdate.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.postalcode == null) ? 0 : this.postalcode.hashCode());
        result = prime * result + ((this.cityId == null) ? 0 : this.cityId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JAddress (");

        sb.append(addressid);
        sb.append(", ").append(address);
        sb.append(", ").append(address2);
        sb.append(", ").append(district);
        sb.append(", ").append(lastupdate);
        sb.append(", ").append(phone);
        sb.append(", ").append(postalcode);
        sb.append(", ").append(cityId);

        sb.append(")");
        return sb.toString();
    }
}
