/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JFilmactor;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JFilmactorRecord extends UpdatableRecordImpl<JFilmactorRecord> implements Record4<Long, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>FilmActor.id</code>.
     */
    public JFilmactorRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>FilmActor.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>FilmActor.lastUpdate</code>.
     */
    public JFilmactorRecord setLastupdate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>FilmActor.lastUpdate</code>.
     */
    public LocalDateTime getLastupdate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>FilmActor.actor_id</code>.
     */
    public JFilmactorRecord setActorId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>FilmActor.actor_id</code>.
     */
    public Integer getActorId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>FilmActor.film_id</code>.
     */
    public JFilmactorRecord setFilmId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>FilmActor.film_id</code>.
     */
    public Integer getFilmId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JFilmactor.FILMACTOR.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return JFilmactor.FILMACTOR.LASTUPDATE;
    }

    @Override
    public Field<Integer> field3() {
        return JFilmactor.FILMACTOR.ACTOR_ID;
    }

    @Override
    public Field<Integer> field4() {
        return JFilmactor.FILMACTOR.FILM_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getLastupdate();
    }

    @Override
    public Integer component3() {
        return getActorId();
    }

    @Override
    public Integer component4() {
        return getFilmId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getLastupdate();
    }

    @Override
    public Integer value3() {
        return getActorId();
    }

    @Override
    public Integer value4() {
        return getFilmId();
    }

    @Override
    public JFilmactorRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JFilmactorRecord value2(LocalDateTime value) {
        setLastupdate(value);
        return this;
    }

    @Override
    public JFilmactorRecord value3(Integer value) {
        setActorId(value);
        return this;
    }

    @Override
    public JFilmactorRecord value4(Integer value) {
        setFilmId(value);
        return this;
    }

    @Override
    public JFilmactorRecord values(Long value1, LocalDateTime value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JFilmactorRecord
     */
    public JFilmactorRecord() {
        super(JFilmactor.FILMACTOR);
    }

    /**
     * Create a detached, initialised JFilmactorRecord
     */
    public JFilmactorRecord(Long id, LocalDateTime lastupdate, Integer actorId, Integer filmId) {
        super(JFilmactor.FILMACTOR);

        setId(id);
        setLastupdate(lastupdate);
        setActorId(actorId);
        setFilmId(filmId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JFilmactorRecord
     */
    public JFilmactorRecord(jooq.jooq_dsl.tables.pojos.JFilmactor value) {
        super(JFilmactor.FILMACTOR);

        if (value != null) {
            setId(value.getId());
            setLastupdate(value.getLastupdate());
            setActorId(value.getActorId());
            setFilmId(value.getFilmId());
            resetChangedOnNotNull();
        }
    }
}
