/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JAddress;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAddressRecord extends UpdatableRecordImpl<JAddressRecord> implements Record8<Integer, String, String, String, LocalDateTime, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Address.addressId</code>.
     */
    public JAddressRecord setAddressid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>Address.addressId</code>.
     */
    public Integer getAddressid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Address.address</code>.
     */
    public JAddressRecord setAddress(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>Address.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Address.address2</code>.
     */
    public JAddressRecord setAddress2(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>Address.address2</code>.
     */
    public String getAddress2() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Address.district</code>.
     */
    public JAddressRecord setDistrict(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>Address.district</code>.
     */
    public String getDistrict() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Address.lastUpdate</code>.
     */
    public JAddressRecord setLastupdate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>Address.lastUpdate</code>.
     */
    public LocalDateTime getLastupdate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>Address.phone</code>.
     */
    public JAddressRecord setPhone(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>Address.phone</code>.
     */
    public String getPhone() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Address.postalCode</code>.
     */
    public JAddressRecord setPostalcode(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>Address.postalCode</code>.
     */
    public String getPostalcode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>Address.city_id</code>.
     */
    public JAddressRecord setCityId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>Address.city_id</code>.
     */
    public Integer getCityId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, LocalDateTime, String, String, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, LocalDateTime, String, String, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JAddress.ADDRESS.ADDRESSID;
    }

    @Override
    public Field<String> field2() {
        return JAddress.ADDRESS.ADDRESS_;
    }

    @Override
    public Field<String> field3() {
        return JAddress.ADDRESS.ADDRESS2;
    }

    @Override
    public Field<String> field4() {
        return JAddress.ADDRESS.DISTRICT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return JAddress.ADDRESS.LASTUPDATE;
    }

    @Override
    public Field<String> field6() {
        return JAddress.ADDRESS.PHONE;
    }

    @Override
    public Field<String> field7() {
        return JAddress.ADDRESS.POSTALCODE;
    }

    @Override
    public Field<Integer> field8() {
        return JAddress.ADDRESS.CITY_ID;
    }

    @Override
    public Integer component1() {
        return getAddressid();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public String component3() {
        return getAddress2();
    }

    @Override
    public String component4() {
        return getDistrict();
    }

    @Override
    public LocalDateTime component5() {
        return getLastupdate();
    }

    @Override
    public String component6() {
        return getPhone();
    }

    @Override
    public String component7() {
        return getPostalcode();
    }

    @Override
    public Integer component8() {
        return getCityId();
    }

    @Override
    public Integer value1() {
        return getAddressid();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public String value3() {
        return getAddress2();
    }

    @Override
    public String value4() {
        return getDistrict();
    }

    @Override
    public LocalDateTime value5() {
        return getLastupdate();
    }

    @Override
    public String value6() {
        return getPhone();
    }

    @Override
    public String value7() {
        return getPostalcode();
    }

    @Override
    public Integer value8() {
        return getCityId();
    }

    @Override
    public JAddressRecord value1(Integer value) {
        setAddressid(value);
        return this;
    }

    @Override
    public JAddressRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public JAddressRecord value3(String value) {
        setAddress2(value);
        return this;
    }

    @Override
    public JAddressRecord value4(String value) {
        setDistrict(value);
        return this;
    }

    @Override
    public JAddressRecord value5(LocalDateTime value) {
        setLastupdate(value);
        return this;
    }

    @Override
    public JAddressRecord value6(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public JAddressRecord value7(String value) {
        setPostalcode(value);
        return this;
    }

    @Override
    public JAddressRecord value8(Integer value) {
        setCityId(value);
        return this;
    }

    @Override
    public JAddressRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5, String value6, String value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JAddressRecord
     */
    public JAddressRecord() {
        super(JAddress.ADDRESS);
    }

    /**
     * Create a detached, initialised JAddressRecord
     */
    public JAddressRecord(Integer addressid, String address, String address2, String district, LocalDateTime lastupdate, String phone, String postalcode, Integer cityId) {
        super(JAddress.ADDRESS);

        setAddressid(addressid);
        setAddress(address);
        setAddress2(address2);
        setDistrict(district);
        setLastupdate(lastupdate);
        setPhone(phone);
        setPostalcode(postalcode);
        setCityId(cityId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JAddressRecord
     */
    public JAddressRecord(jooq.jooq_dsl.tables.pojos.JAddress value) {
        super(JAddress.ADDRESS);

        if (value != null) {
            setAddressid(value.getAddressid());
            setAddress(value.getAddress());
            setAddress2(value.getAddress2());
            setDistrict(value.getDistrict());
            setLastupdate(value.getLastupdate());
            setPhone(value.getPhone());
            setPostalcode(value.getPostalcode());
            setCityId(value.getCityId());
            resetChangedOnNotNull();
        }
    }
}
