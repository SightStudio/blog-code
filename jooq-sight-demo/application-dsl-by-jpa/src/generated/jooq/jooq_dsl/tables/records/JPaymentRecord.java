/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.math.BigDecimal;
import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JPayment;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JPaymentRecord extends UpdatableRecordImpl<JPaymentRecord> implements Record7<Integer, BigDecimal, LocalDateTime, LocalDateTime, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Payment.paymentId</code>.
     */
    public JPaymentRecord setPaymentid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>Payment.paymentId</code>.
     */
    public Integer getPaymentid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Payment.amount</code>.
     */
    public JPaymentRecord setAmount(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>Payment.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>Payment.lastUpdate</code>.
     */
    public JPaymentRecord setLastupdate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>Payment.lastUpdate</code>.
     */
    public LocalDateTime getLastupdate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>Payment.paymentDate</code>.
     */
    public JPaymentRecord setPaymentdate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>Payment.paymentDate</code>.
     */
    public LocalDateTime getPaymentdate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>Payment.customer_id</code>.
     */
    public JPaymentRecord setCustomerId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>Payment.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>Payment.rental_id</code>.
     */
    public JPaymentRecord setRentalId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>Payment.rental_id</code>.
     */
    public Integer getRentalId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>Payment.staff_id</code>.
     */
    public JPaymentRecord setStaffId(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>Payment.staff_id</code>.
     */
    public Integer getStaffId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, BigDecimal, LocalDateTime, LocalDateTime, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, BigDecimal, LocalDateTime, LocalDateTime, Integer, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JPayment.PAYMENT.PAYMENTID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return JPayment.PAYMENT.AMOUNT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return JPayment.PAYMENT.LASTUPDATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return JPayment.PAYMENT.PAYMENTDATE;
    }

    @Override
    public Field<Integer> field5() {
        return JPayment.PAYMENT.CUSTOMER_ID;
    }

    @Override
    public Field<Integer> field6() {
        return JPayment.PAYMENT.RENTAL_ID;
    }

    @Override
    public Field<Integer> field7() {
        return JPayment.PAYMENT.STAFF_ID;
    }

    @Override
    public Integer component1() {
        return getPaymentid();
    }

    @Override
    public BigDecimal component2() {
        return getAmount();
    }

    @Override
    public LocalDateTime component3() {
        return getLastupdate();
    }

    @Override
    public LocalDateTime component4() {
        return getPaymentdate();
    }

    @Override
    public Integer component5() {
        return getCustomerId();
    }

    @Override
    public Integer component6() {
        return getRentalId();
    }

    @Override
    public Integer component7() {
        return getStaffId();
    }

    @Override
    public Integer value1() {
        return getPaymentid();
    }

    @Override
    public BigDecimal value2() {
        return getAmount();
    }

    @Override
    public LocalDateTime value3() {
        return getLastupdate();
    }

    @Override
    public LocalDateTime value4() {
        return getPaymentdate();
    }

    @Override
    public Integer value5() {
        return getCustomerId();
    }

    @Override
    public Integer value6() {
        return getRentalId();
    }

    @Override
    public Integer value7() {
        return getStaffId();
    }

    @Override
    public JPaymentRecord value1(Integer value) {
        setPaymentid(value);
        return this;
    }

    @Override
    public JPaymentRecord value2(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public JPaymentRecord value3(LocalDateTime value) {
        setLastupdate(value);
        return this;
    }

    @Override
    public JPaymentRecord value4(LocalDateTime value) {
        setPaymentdate(value);
        return this;
    }

    @Override
    public JPaymentRecord value5(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public JPaymentRecord value6(Integer value) {
        setRentalId(value);
        return this;
    }

    @Override
    public JPaymentRecord value7(Integer value) {
        setStaffId(value);
        return this;
    }

    @Override
    public JPaymentRecord values(Integer value1, BigDecimal value2, LocalDateTime value3, LocalDateTime value4, Integer value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JPaymentRecord
     */
    public JPaymentRecord() {
        super(JPayment.PAYMENT);
    }

    /**
     * Create a detached, initialised JPaymentRecord
     */
    public JPaymentRecord(Integer paymentid, BigDecimal amount, LocalDateTime lastupdate, LocalDateTime paymentdate, Integer customerId, Integer rentalId, Integer staffId) {
        super(JPayment.PAYMENT);

        setPaymentid(paymentid);
        setAmount(amount);
        setLastupdate(lastupdate);
        setPaymentdate(paymentdate);
        setCustomerId(customerId);
        setRentalId(rentalId);
        setStaffId(staffId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JPaymentRecord
     */
    public JPaymentRecord(jooq.jooq_dsl.tables.pojos.JPayment value) {
        super(JPayment.PAYMENT);

        if (value != null) {
            setPaymentid(value.getPaymentid());
            setAmount(value.getAmount());
            setLastupdate(value.getLastupdate());
            setPaymentdate(value.getPaymentdate());
            setCustomerId(value.getCustomerId());
            setRentalId(value.getRentalId());
            setStaffId(value.getStaffId());
            resetChangedOnNotNull();
        }
    }
}
