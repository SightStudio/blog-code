/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.jooq_dsl.tables.JCustomer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JCustomerRecord extends UpdatableRecordImpl<JCustomerRecord> implements Record9<Integer, Boolean, LocalDateTime, String, String, String, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Customer.customerId</code>.
     */
    public JCustomerRecord setCustomerid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>Customer.customerId</code>.
     */
    public Integer getCustomerid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Customer.active</code>.
     */
    public JCustomerRecord setActive(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>Customer.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>Customer.createDate</code>.
     */
    public JCustomerRecord setCreatedate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>Customer.createDate</code>.
     */
    public LocalDateTime getCreatedate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>Customer.email</code>.
     */
    public JCustomerRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>Customer.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Customer.firstName</code>.
     */
    public JCustomerRecord setFirstname(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>Customer.firstName</code>.
     */
    public String getFirstname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Customer.lastName</code>.
     */
    public JCustomerRecord setLastname(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>Customer.lastName</code>.
     */
    public String getLastname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>Customer.lastUpdate</code>.
     */
    public JCustomerRecord setLastupdate(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>Customer.lastUpdate</code>.
     */
    public LocalDateTime getLastupdate() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>Customer.address_id</code>.
     */
    public JCustomerRecord setAddressId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>Customer.address_id</code>.
     */
    public Integer getAddressId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>Customer.store_id</code>.
     */
    public JCustomerRecord setStoreId(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>Customer.store_id</code>.
     */
    public Integer getStoreId() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Boolean, LocalDateTime, String, String, String, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Boolean, LocalDateTime, String, String, String, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JCustomer.CUSTOMER.CUSTOMERID;
    }

    @Override
    public Field<Boolean> field2() {
        return JCustomer.CUSTOMER.ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return JCustomer.CUSTOMER.CREATEDATE;
    }

    @Override
    public Field<String> field4() {
        return JCustomer.CUSTOMER.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return JCustomer.CUSTOMER.FIRSTNAME;
    }

    @Override
    public Field<String> field6() {
        return JCustomer.CUSTOMER.LASTNAME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return JCustomer.CUSTOMER.LASTUPDATE;
    }

    @Override
    public Field<Integer> field8() {
        return JCustomer.CUSTOMER.ADDRESS_ID;
    }

    @Override
    public Field<Integer> field9() {
        return JCustomer.CUSTOMER.STORE_ID;
    }

    @Override
    public Integer component1() {
        return getCustomerid();
    }

    @Override
    public Boolean component2() {
        return getActive();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedate();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getFirstname();
    }

    @Override
    public String component6() {
        return getLastname();
    }

    @Override
    public LocalDateTime component7() {
        return getLastupdate();
    }

    @Override
    public Integer component8() {
        return getAddressId();
    }

    @Override
    public Integer component9() {
        return getStoreId();
    }

    @Override
    public Integer value1() {
        return getCustomerid();
    }

    @Override
    public Boolean value2() {
        return getActive();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedate();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getFirstname();
    }

    @Override
    public String value6() {
        return getLastname();
    }

    @Override
    public LocalDateTime value7() {
        return getLastupdate();
    }

    @Override
    public Integer value8() {
        return getAddressId();
    }

    @Override
    public Integer value9() {
        return getStoreId();
    }

    @Override
    public JCustomerRecord value1(Integer value) {
        setCustomerid(value);
        return this;
    }

    @Override
    public JCustomerRecord value2(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public JCustomerRecord value3(LocalDateTime value) {
        setCreatedate(value);
        return this;
    }

    @Override
    public JCustomerRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public JCustomerRecord value5(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public JCustomerRecord value6(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public JCustomerRecord value7(LocalDateTime value) {
        setLastupdate(value);
        return this;
    }

    @Override
    public JCustomerRecord value8(Integer value) {
        setAddressId(value);
        return this;
    }

    @Override
    public JCustomerRecord value9(Integer value) {
        setStoreId(value);
        return this;
    }

    @Override
    public JCustomerRecord values(Integer value1, Boolean value2, LocalDateTime value3, String value4, String value5, String value6, LocalDateTime value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JCustomerRecord
     */
    public JCustomerRecord() {
        super(JCustomer.CUSTOMER);
    }

    /**
     * Create a detached, initialised JCustomerRecord
     */
    public JCustomerRecord(Integer customerid, Boolean active, LocalDateTime createdate, String email, String firstname, String lastname, LocalDateTime lastupdate, Integer addressId, Integer storeId) {
        super(JCustomer.CUSTOMER);

        setCustomerid(customerid);
        setActive(active);
        setCreatedate(createdate);
        setEmail(email);
        setFirstname(firstname);
        setLastname(lastname);
        setLastupdate(lastupdate);
        setAddressId(addressId);
        setStoreId(storeId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JCustomerRecord
     */
    public JCustomerRecord(jooq.jooq_dsl.tables.pojos.JCustomer value) {
        super(JCustomer.CUSTOMER);

        if (value != null) {
            setCustomerid(value.getCustomerid());
            setActive(value.getActive());
            setCreatedate(value.getCreatedate());
            setEmail(value.getEmail());
            setFirstname(value.getFirstname());
            setLastname(value.getLastname());
            setLastupdate(value.getLastupdate());
            setAddressId(value.getAddressId());
            setStoreId(value.getStoreId());
            resetChangedOnNotNull();
        }
    }
}
