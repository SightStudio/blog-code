/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JFilmtext;
import jooq.jooq_dsl.tables.records.JFilmtextRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class FilmtextDao extends AbstractSpringDAOImpl<JFilmtextRecord, jooq.jooq_dsl.tables.pojos.JFilmtext, Integer> {

    /**
     * Create a new FilmtextDao without any configuration
     */
    public FilmtextDao() {
        super(JFilmtext.FILMTEXT, jooq.jooq_dsl.tables.pojos.JFilmtext.class);
    }

    /**
     * Create a new FilmtextDao with an attached configuration
     */
    @Autowired
    public FilmtextDao(Configuration configuration) {
        super(JFilmtext.FILMTEXT, jooq.jooq_dsl.tables.pojos.JFilmtext.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JFilmtext object) {
        return object.getFilmid();
    }

    /**
     * Fetch records that have <code>filmId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchRangeOfJFilmid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JFilmtext.FILMTEXT.FILMID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>filmId IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchByJFilmid(Integer... values) {
        return fetch(JFilmtext.FILMTEXT.FILMID, values);
    }

    /**
     * Fetch a unique record that has <code>filmId = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JFilmtext fetchOneByJFilmid(Integer value) {
        return fetchOne(JFilmtext.FILMTEXT.FILMID, value);
    }

    /**
     * Fetch a unique record that has <code>filmId = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchOptionalByJFilmid(Integer value) {
        return fetchOptional(JFilmtext.FILMTEXT.FILMID, value);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchRangeOfJDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilmtext.FILMTEXT.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchByJDescription(String... values) {
        return fetch(JFilmtext.FILMTEXT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchRangeOfJTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilmtext.FILMTEXT.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JFilmtext> fetchByJTitle(String... values) {
        return fetch(JFilmtext.FILMTEXT.TITLE, values);
    }
}
