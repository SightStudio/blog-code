/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JRental;
import jooq.jooq_dsl.tables.records.JRentalRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class RentalDao extends AbstractSpringDAOImpl<JRentalRecord, jooq.jooq_dsl.tables.pojos.JRental, Integer> {

    /**
     * Create a new RentalDao without any configuration
     */
    public RentalDao() {
        super(JRental.RENTAL, jooq.jooq_dsl.tables.pojos.JRental.class);
    }

    /**
     * Create a new RentalDao with an attached configuration
     */
    @Autowired
    public RentalDao(Configuration configuration) {
        super(JRental.RENTAL, jooq.jooq_dsl.tables.pojos.JRental.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JRental object) {
        return object.getRentalid();
    }

    /**
     * Fetch records that have <code>rentalId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJRentalid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JRental.RENTAL.RENTALID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rentalId IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJRentalid(Integer... values) {
        return fetch(JRental.RENTAL.RENTALID, values);
    }

    /**
     * Fetch a unique record that has <code>rentalId = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JRental fetchOneByJRentalid(Integer value) {
        return fetchOne(JRental.RENTAL.RENTALID, value);
    }

    /**
     * Fetch a unique record that has <code>rentalId = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JRental> fetchOptionalByJRentalid(Integer value) {
        return fetchOptional(JRental.RENTAL.RENTALID, value);
    }

    /**
     * Fetch records that have <code>lastUpdate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJLastupdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JRental.RENTAL.LASTUPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastUpdate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJLastupdate(LocalDateTime... values) {
        return fetch(JRental.RENTAL.LASTUPDATE, values);
    }

    /**
     * Fetch records that have <code>rentalDate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJRentaldate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JRental.RENTAL.RENTALDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rentalDate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJRentaldate(LocalDateTime... values) {
        return fetch(JRental.RENTAL.RENTALDATE, values);
    }

    /**
     * Fetch records that have <code>returnDate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJReturndate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JRental.RENTAL.RETURNDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>returnDate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJReturndate(LocalDateTime... values) {
        return fetch(JRental.RENTAL.RETURNDATE, values);
    }

    /**
     * Fetch records that have <code>customer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JRental.RENTAL.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJCustomerId(Integer... values) {
        return fetch(JRental.RENTAL.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>inventory_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJInventoryId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JRental.RENTAL.INVENTORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inventory_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJInventoryId(Integer... values) {
        return fetch(JRental.RENTAL.INVENTORY_ID, values);
    }

    /**
     * Fetch records that have <code>staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchRangeOfJStaffId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JRental.RENTAL.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staff_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JRental> fetchByJStaffId(Integer... values) {
        return fetch(JRental.RENTAL.STAFF_ID, values);
    }
}
