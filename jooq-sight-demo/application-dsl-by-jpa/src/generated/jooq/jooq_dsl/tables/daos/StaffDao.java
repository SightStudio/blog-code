/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JStaff;
import jooq.jooq_dsl.tables.records.JStaffRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class StaffDao extends AbstractSpringDAOImpl<JStaffRecord, jooq.jooq_dsl.tables.pojos.JStaff, Integer> {

    /**
     * Create a new StaffDao without any configuration
     */
    public StaffDao() {
        super(JStaff.STAFF, jooq.jooq_dsl.tables.pojos.JStaff.class);
    }

    /**
     * Create a new StaffDao with an attached configuration
     */
    @Autowired
    public StaffDao(Configuration configuration) {
        super(JStaff.STAFF, jooq.jooq_dsl.tables.pojos.JStaff.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JStaff object) {
        return object.getStaffid();
    }

    /**
     * Fetch records that have <code>staffId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJStaffid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JStaff.STAFF.STAFFID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staffId IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJStaffid(Integer... values) {
        return fetch(JStaff.STAFF.STAFFID, values);
    }

    /**
     * Fetch a unique record that has <code>staffId = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JStaff fetchOneByJStaffid(Integer value) {
        return fetchOne(JStaff.STAFF.STAFFID, value);
    }

    /**
     * Fetch a unique record that has <code>staffId = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JStaff> fetchOptionalByJStaffid(Integer value) {
        return fetchOptional(JStaff.STAFF.STAFFID, value);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(JStaff.STAFF.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJActive(Boolean... values) {
        return fetch(JStaff.STAFF.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(JStaff.STAFF.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJEmail(String... values) {
        return fetch(JStaff.STAFF.EMAIL, values);
    }

    /**
     * Fetch records that have <code>firstName BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJFirstname(String lowerInclusive, String upperInclusive) {
        return fetchRange(JStaff.STAFF.FIRSTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>firstName IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJFirstname(String... values) {
        return fetch(JStaff.STAFF.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastName BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJLastname(String lowerInclusive, String upperInclusive) {
        return fetchRange(JStaff.STAFF.LASTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastName IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJLastname(String... values) {
        return fetch(JStaff.STAFF.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>lastUpdate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJLastupdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JStaff.STAFF.LASTUPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastUpdate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJLastupdate(LocalDateTime... values) {
        return fetch(JStaff.STAFF.LASTUPDATE, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(JStaff.STAFF.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJPassword(String... values) {
        return fetch(JStaff.STAFF.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>picture BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJPicture(String lowerInclusive, String upperInclusive) {
        return fetchRange(JStaff.STAFF.PICTURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>picture IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJPicture(String... values) {
        return fetch(JStaff.STAFF.PICTURE, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(JStaff.STAFF.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJUsername(String... values) {
        return fetch(JStaff.STAFF.USERNAME, values);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJAddressId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JStaff.STAFF.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJAddressId(Integer... values) {
        return fetch(JStaff.STAFF.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchRangeOfJStoreId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JStaff.STAFF.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JStaff> fetchByJStoreId(Integer... values) {
        return fetch(JStaff.STAFF.STORE_ID, values);
    }
}
