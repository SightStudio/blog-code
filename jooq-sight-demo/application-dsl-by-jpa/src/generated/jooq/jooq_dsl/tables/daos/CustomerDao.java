/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JCustomer;
import jooq.jooq_dsl.tables.records.JCustomerRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CustomerDao extends AbstractSpringDAOImpl<JCustomerRecord, jooq.jooq_dsl.tables.pojos.JCustomer, Integer> {

    /**
     * Create a new CustomerDao without any configuration
     */
    public CustomerDao() {
        super(JCustomer.CUSTOMER, jooq.jooq_dsl.tables.pojos.JCustomer.class);
    }

    /**
     * Create a new CustomerDao with an attached configuration
     */
    @Autowired
    public CustomerDao(Configuration configuration) {
        super(JCustomer.CUSTOMER, jooq.jooq_dsl.tables.pojos.JCustomer.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JCustomer object) {
        return object.getCustomerid();
    }

    /**
     * Fetch records that have <code>customerId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJCustomerid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.CUSTOMERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customerId IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJCustomerid(Integer... values) {
        return fetch(JCustomer.CUSTOMER.CUSTOMERID, values);
    }

    /**
     * Fetch a unique record that has <code>customerId = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JCustomer fetchOneByJCustomerid(Integer value) {
        return fetchOne(JCustomer.CUSTOMER.CUSTOMERID, value);
    }

    /**
     * Fetch a unique record that has <code>customerId = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JCustomer> fetchOptionalByJCustomerid(Integer value) {
        return fetchOptional(JCustomer.CUSTOMER.CUSTOMERID, value);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJActive(Boolean... values) {
        return fetch(JCustomer.CUSTOMER.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>createDate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJCreatedate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.CREATEDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createDate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJCreatedate(LocalDateTime... values) {
        return fetch(JCustomer.CUSTOMER.CREATEDATE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJEmail(String... values) {
        return fetch(JCustomer.CUSTOMER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>firstName BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJFirstname(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.FIRSTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>firstName IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJFirstname(String... values) {
        return fetch(JCustomer.CUSTOMER.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastName BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJLastname(String lowerInclusive, String upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.LASTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastName IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJLastname(String... values) {
        return fetch(JCustomer.CUSTOMER.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>lastUpdate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJLastupdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.LASTUPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastUpdate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJLastupdate(LocalDateTime... values) {
        return fetch(JCustomer.CUSTOMER.LASTUPDATE, values);
    }

    /**
     * Fetch records that have <code>address_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJAddressId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.ADDRESS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJAddressId(Integer... values) {
        return fetch(JCustomer.CUSTOMER.ADDRESS_ID, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchRangeOfJStoreId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JCustomer.CUSTOMER.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JCustomer> fetchByJStoreId(Integer... values) {
        return fetch(JCustomer.CUSTOMER.STORE_ID, values);
    }
}
