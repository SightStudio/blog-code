/*
 * This file is generated by jOOQ.
 */
package jooq.jooq_dsl.tables.daos;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import jooq.jooq_dsl.AbstractSpringDAOImpl;
import jooq.jooq_dsl.tables.JPayment;
import jooq.jooq_dsl.tables.records.JPaymentRecord;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PaymentDao extends AbstractSpringDAOImpl<JPaymentRecord, jooq.jooq_dsl.tables.pojos.JPayment, Integer> {

    /**
     * Create a new PaymentDao without any configuration
     */
    public PaymentDao() {
        super(JPayment.PAYMENT, jooq.jooq_dsl.tables.pojos.JPayment.class);
    }

    /**
     * Create a new PaymentDao with an attached configuration
     */
    @Autowired
    public PaymentDao(Configuration configuration) {
        super(JPayment.PAYMENT, jooq.jooq_dsl.tables.pojos.JPayment.class, configuration);
    }

    @Override
    public Integer getId(jooq.jooq_dsl.tables.pojos.JPayment object) {
        return object.getPaymentid();
    }

    /**
     * Fetch records that have <code>paymentId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJPaymentid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JPayment.PAYMENT.PAYMENTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paymentId IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJPaymentid(Integer... values) {
        return fetch(JPayment.PAYMENT.PAYMENTID, values);
    }

    /**
     * Fetch a unique record that has <code>paymentId = value</code>
     */
    public jooq.jooq_dsl.tables.pojos.JPayment fetchOneByJPaymentid(Integer value) {
        return fetchOne(JPayment.PAYMENT.PAYMENTID, value);
    }

    /**
     * Fetch a unique record that has <code>paymentId = value</code>
     */
    public Optional<jooq.jooq_dsl.tables.pojos.JPayment> fetchOptionalByJPaymentid(Integer value) {
        return fetchOptional(JPayment.PAYMENT.PAYMENTID, value);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(JPayment.PAYMENT.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJAmount(BigDecimal... values) {
        return fetch(JPayment.PAYMENT.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>lastUpdate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJLastupdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPayment.PAYMENT.LASTUPDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastUpdate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJLastupdate(LocalDateTime... values) {
        return fetch(JPayment.PAYMENT.LASTUPDATE, values);
    }

    /**
     * Fetch records that have <code>paymentDate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJPaymentdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(JPayment.PAYMENT.PAYMENTDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paymentDate IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJPaymentdate(LocalDateTime... values) {
        return fetch(JPayment.PAYMENT.PAYMENTDATE, values);
    }

    /**
     * Fetch records that have <code>customer_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJCustomerId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JPayment.PAYMENT.CUSTOMER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJCustomerId(Integer... values) {
        return fetch(JPayment.PAYMENT.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>rental_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJRentalId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JPayment.PAYMENT.RENTAL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rental_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJRentalId(Integer... values) {
        return fetch(JPayment.PAYMENT.RENTAL_ID, values);
    }

    /**
     * Fetch records that have <code>staff_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchRangeOfJStaffId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(JPayment.PAYMENT.STAFF_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>staff_id IN (values)</code>
     */
    public List<jooq.jooq_dsl.tables.pojos.JPayment> fetchByJStaffId(Integer... values) {
        return fetch(JPayment.PAYMENT.STAFF_ID, values);
    }
}
