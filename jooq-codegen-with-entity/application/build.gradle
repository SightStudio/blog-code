plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'nu.studer.jooq'
}
dependencies {
    implementation project(':jooq-entity')
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.modelmapper.extensions:modelmapper-jooq:2.3.9'
    implementation 'com.github.chhsiao90:modelmapper-module-java8-datatypes:1.2.1'
    implementation 'com.github.chhsiao90:modelmapper-module-jsr310:1.2.1'
    runtimeOnly 'mysql:mysql-connector-java:8.0.27'

    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation "org.jooq:jooq-meta:${jooqVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // 실패 (jpa 엔티티 기반으로 JOOQ DSL을 생성할때 필요한 Dependency
    jooqGenerator project(':jooq-custom')
    jooqGenerator 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'
    jooqGenerator 'com.sun.xml.bind:jaxb-impl:3.0.2'
    jooqGenerator 'com.h2database:h2:2.1.212'
    jooqGenerator 'com.google.code.gson:gson:2.9.0'
    jooqGenerator 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    jooqGenerator 'jakarta.activation:jakarta.activation-api:2.1.0'
    jooqGenerator 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    jooqGenerator 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    jooqGenerator "org.jooq:jooq-meta-extensions-hibernate:${jooqVersion}"
}

apply from: 'jooq.gradle'

tasks {
    test {
        useJUnitPlatform()
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "src/generated"]
        }
    }
}