apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out docker-kompose.yml
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: jooq-db-mysql
      name: jooq-db-mysql
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: jooq-db-mysql
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml --out docker-kompose.yml
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: jooq-db-mysql
      name: jooq-db-mysql
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: jooq-db-mysql
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml --out docker-kompose.yml
            kompose.version: 1.26.1 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: jooq-db-mysql
        spec:
          containers:
            - args:
                - mysqld
                - --character-set-server=utf8mb4
                - --collation-server=utf8mb4_unicode_ci
              env:
                - name: MYSQL_DATABASE
                  value: jooq
                - name: MYSQL_ROOT_PASSWORD
                  value: passwd
              image: mysql:8.0.27
              name: jooq-db-mysql
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /data
                  name: test-volume
          restartPolicy: Always
          volumes:
            - name: test-volume
              persistentVolumeClaim:
                claimName: test-volume
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: test-volume
      name: test-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

